{
  "id" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
  "realm" : "VitalMedic",
  "displayName" : "",
  "displayNameHtml" : "",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 86400,
  "accessTokenLifespanForImplicitFlow" : 172800,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : false,
  "rememberMe" : true,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "8d6e015a-3f44-4e4d-b5e8-53dd547b5cb9",
      "name" : "PATIENT",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
      "attributes" : { }
    }, {
      "id" : "4d3f2a0c-f49e-4599-9f55-f4a0f49945a3",
      "name" : "default-roles-vitalmedic",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "realm-management" : [ "view-users", "query-users" ],
          "broker" : [ "read-token" ],
          "account" : [ "view-profile", "manage-account-links", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
      "attributes" : { }
    }, {
      "id" : "1613b5d5-73bc-46af-b8ad-a3c045726c7d",
      "name" : "ADMIN",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
      "attributes" : { }
    }, {
      "id" : "4e2bfaf9-d618-4c15-9a20-fde6c91c1cca",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
      "attributes" : { }
    }, {
      "id" : "accea07f-d8d5-4f72-acff-24fb80b9e883",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
      "attributes" : { }
    }, {
      "id" : "d0880b49-550c-490e-a830-effc35cdbeac",
      "name" : "DOCTOR",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
      "attributes" : { }
    }, {
      "id" : "bf9aac9b-401f-4a19-a510-6ed68fdd768f",
      "name" : "ONBOARDING_PENDING",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "600e7d49-9136-448b-9208-ee9f653612b3",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "b9838808-2715-42a4-9b58-77a2e12676ff",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "f541902b-090a-4836-ad71-aaccee709570",
        "name" : "exchange-token",
        "description" : "Allows exchanging external tokens for realm tokens",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "490ae515-9072-4cb9-8bdf-338ed7f598cd",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "3cae5fdd-b2c8-4b47-9f74-ce0afe793420",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "c2cbcc15-d75c-4fe5-a008-2066996632ca",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "3b167645-6012-489e-b95d-a5a347741318",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "bb14ad87-a313-46d1-9fea-6a1eb2531af9",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "48711ebf-7287-4e0b-bd35-080628b5ae0b",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "4c6196c3-b94e-4586-a5a6-dab288d5abf9",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "36761d99-5843-4bdf-93eb-8f5c8d918dde",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "c1ae1639-eaf0-4631-8ce4-97970f47b6ed",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "f764dcb7-741a-442f-baeb-663bb0eec27a",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "3d3ed622-cabc-4fd1-8be6-651773b5ccca",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "2e9cae43-a94b-459e-ad29-98a5405ca20e",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "b8fd0150-118a-4ed1-9556-37d546394dce",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "e9725cc1-5a18-4bc1-917c-e142306752b3",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-realms", "manage-identity-providers", "manage-events", "create-client", "manage-authorization", "view-clients", "manage-realm", "view-users", "manage-clients", "manage-users", "query-groups", "impersonation", "query-clients", "view-authorization", "view-identity-providers", "view-events", "view-realm", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "91852dfb-4576-401c-b5a9-71083eb9636f",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "be14927a-18c0-48d2-a83a-ad99553af0c2",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      }, {
        "id" : "2e76c48f-591b-4e94-8309-5e63c753c859",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
        "attributes" : { }
      } ],
      "admin-permissions" : [ {
        "id" : "ac29bee7-b1d1-448f-9c0b-ed09b5f8b8f3",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1715a933-6142-4b7e-84b3-43f02dcd1075",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "vitalmedic-backend" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "4609ff3a-c8f7-4920-a031-2720b7a7fad3",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ab3fb350-ca13-4343-b8db-ddc89b678c68",
        "attributes" : { }
      } ],
      "vital-medic" : [ ],
      "account" : [ {
        "id" : "b0d92ecd-3bae-46ac-b7bf-c29963736a6e",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      }, {
        "id" : "276333eb-e85e-45a7-bb2c-3f6aed127a16",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      }, {
        "id" : "dcd57aeb-e59c-4879-ae28-a91ccf15d21b",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      }, {
        "id" : "9b1faa52-2a5d-4742-9e77-cc14c33c7180",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      }, {
        "id" : "c69ccd7e-5c64-4cbc-9ae1-ec0c78891a13",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      }, {
        "id" : "ad517e01-974c-480d-9df7-0184ad6eb699",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      }, {
        "id" : "f6acd001-15ae-4450-965a-bcb9cabe0ab7",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      }, {
        "id" : "30eaed53-496f-4c30-81bd-7d83bfe11b19",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "4d3f2a0c-f49e-4599-9f55-f4a0f49945a3",
    "name" : "default-roles-vitalmedic",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "dc85e046-f5e2-4d1a-9147-f09fedb93cf3"
  },
  "adminPermissionsClient" : {
    "id" : "1715a933-6142-4b7e-84b3-43f02dcd1075",
    "clientId" : "admin-permissions"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "Yes",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "required",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "c4f4cbd1-3b88-44ec-afdf-69e3b9e1dca9",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/VitalMedic/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/VitalMedic/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "3d3ec53b-d781-4733-95ee-37eaf66fa98e",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/VitalMedic/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/VitalMedic/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "f9c7e946-2dd2-4447-b8b2-8b53f00acd03",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "38534856-e1ec-4dd7-84c2-faa8ae3a8748",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "1715a933-6142-4b7e-84b3-43f02dcd1075",
    "clientId" : "admin-permissions",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "pdZbJHZ85kg4pPR2apq8U2BWDSIQ05bO",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.secret.creation.time" : "1760748711"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "service_account" ],
    "optionalClientScopes" : [ ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Roles",
        "type" : "Roles",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "uris" : [ ],
        "scopes" : [ {
          "name" : "map-role-composite"
        }, {
          "name" : "map-role-client-scope"
        }, {
          "name" : "map-role"
        } ]
      }, {
        "name" : "Clients",
        "type" : "Clients",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "uris" : [ ],
        "scopes" : [ {
          "name" : "view"
        }, {
          "name" : "map-roles-client-scope"
        }, {
          "name" : "map-roles"
        }, {
          "name" : "manage"
        }, {
          "name" : "map-roles-composite"
        } ]
      }, {
        "name" : "Users",
        "type" : "Users",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "uris" : [ ],
        "scopes" : [ {
          "name" : "manage-group-membership"
        }, {
          "name" : "view"
        }, {
          "name" : "impersonate"
        }, {
          "name" : "map-roles"
        }, {
          "name" : "reset-password"
        }, {
          "name" : "manage"
        } ]
      }, {
        "name" : "Groups",
        "type" : "Groups",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "uris" : [ ],
        "scopes" : [ {
          "name" : "manage-members"
        }, {
          "name" : "view"
        }, {
          "name" : "manage-membership"
        }, {
          "name" : "view-members"
        }, {
          "name" : "manage"
        }, {
          "name" : "impersonate-members"
        } ]
      } ],
      "policies" : [ {
        "name" : "Allow vitalmedic-backend",
        "description" : "Permite al cliente backend acceder al recurso Users",
        "type" : "client",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "clients" : "[\"vitalmedic-backend\"]"
        }
      } ],
      "scopes" : [ {
        "name" : "manage-group-membership"
      }, {
        "name" : "map-roles-client-scope"
      }, {
        "name" : "map-role"
      }, {
        "name" : "view-members"
      }, {
        "name" : "reset-password"
      }, {
        "name" : "manage"
      }, {
        "name" : "impersonate-members"
      }, {
        "name" : "manage-members"
      }, {
        "name" : "view"
      }, {
        "name" : "impersonate"
      }, {
        "name" : "manage-membership"
      }, {
        "name" : "map-role-composite"
      }, {
        "name" : "map-roles"
      }, {
        "name" : "map-role-client-scope"
      }, {
        "name" : "map-roles-composite"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "ab3fb350-ca13-4343-b8db-ddc89b678c68",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "eea9ff2d-4a11-4d21-9f17-04c73e5367d9",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "9321dcb8-2bb7-48c7-b3fd-472ae11be794",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/VitalMedic/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/VitalMedic/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "34d3f61f-745a-4597-affa-1e80b04272fb",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "c5bd6035-95d9-4b0a-9c80-6a89d3663790",
    "clientId" : "vital-medic",
    "name" : "Vital Medic Frontend",
    "description" : "",
    "rootUrl" : "http://localhost:3000",
    "adminUrl" : "http://localhost:3000",
    "baseUrl" : "http://localhost:3000",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:3000/*", "http://localhost:5173/*" ],
    "webOrigins" : [ "http://localhost:3000", "http://localhost:5173" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1759428708",
      "standard.token.exchange.enabled" : "false",
      "frontchannel.logout.url" : "http://localhost:3000/logout",
      "frontchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "http://localhost:3000/*##http://localhost:5173/*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "display.on.consent.screen" : "false",
      "pkce.code.challenge.method" : "S256",
      "dpop.bound.access.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "58e1cc3a-82ee-4b3f-a720-c180bd25cf32",
    "clientId" : "vitalmedic-backend",
    "name" : "Vital Medic Backend",
    "description" : "",
    "rootUrl" : "http://localhost:8080",
    "adminUrl" : "http://localhost:8080",
    "baseUrl" : "http://localhost:8080",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "iJ9kIDMFntlGmm6oR2JdHKZICMyPX8lG",
    "redirectUris" : [ "http://localhost:8080" ],
    "webOrigins" : [ "http://localhost:8080" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "request.object.signature.alg" : "any",
      "frontchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "http://localhost:8080/*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "request.object.encryption.enc" : "any",
      "pkce.code.challenge.method" : "S256",
      "dpop.bound.access.tokens" : "false",
      "id.token.as.detached.signature" : "false",
      "client.secret.creation.time" : "1759914306",
      "request.object.encryption.alg" : "any",
      "client.introspection.response.allow.jwt.claim.enabled" : "false",
      "standard.token.exchange.enabled" : "true",
      "client.use.lightweight.access.token.enabled" : "false",
      "request.object.required" : "not required",
      "access.token.header.type.rfc9068" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "service_account", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "aedc81cd-9fd8-43eb-a4be-ea85593a4140",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "562dd81b-c9e4-46be-8a64-96c6634c926a",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "c9f9f4ce-07c4-4f45-a605-50bacf05422a",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "bd09d5e0-05bd-4568-b3e0-7c34e7a453ea",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "c964b37f-14cb-4844-a9ff-576eee8d5cbc",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "fdf8689c-8780-4b15-b94d-db54c9d704ec",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "c43ea31e-1009-41bc-acd5-9acbfc3936ee",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "12841e20-2556-4053-baaf-e1200b392ee2",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "dfeb52d3-d068-47fe-9e11-b852fb7125aa",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "30bc05f0-2b6e-4573-942a-2e46457e5e6d",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "d62b3630-8527-49f2-b3c7-bccc523e1eb0",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "eba162b8-a056-4349-b231-1cf2abaf4809",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "da152302-0ae2-4141-a4a3-1384f09f0383",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "674fdcfc-bf8e-4531-99b8-fec3711891e1",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c368316f-d57a-4fe5-836c-03e48691c7d7",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "6a700bb0-dd89-4b67-b8f5-c1de5ff35c45",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c61e6c52-f0fa-4b92-960c-73df0cf3f9bc",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b5ba2c43-bcda-4910-a6f3-fc5d98521e7a",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a1b064eb-69f4-4da3-9b9f-8c4e4d10dbe2",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6b165682-d2c1-4213-822f-528977ca4ffb",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "82d4be06-dd8b-4e9c-99ab-5e319d3f2733",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "652caadf-a3eb-4bb2-87bf-4655f41791ca",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "299543e5-2307-4176-8613-d2b42aa3280d",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "391c6b91-7028-417f-84dc-78a95b4e0f9f",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "509127ff-f4cc-4aa8-a0c0-697c77450915",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "19e04ec5-9758-4161-a538-4c4618b0ddcb",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "671a0b19-222e-4430-b267-781c4338d36a",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1d323b20-e02b-46e4-be75-62daca7375fe",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "cc042653-99d6-4385-9dcf-dc22e62ede55",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "3b7f4aec-2202-4a3f-8778-204b22022737",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0087067b-b88d-4802-abfa-a8699944b910",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "859e76a8-ceff-40f9-9418-45e7f0deb4ab",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "9a30e88c-bb2c-4342-86d2-99516643e9d3",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4e209cd7-39e9-4dba-87e7-fa104d76c819",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "7e4379b7-7af0-48b9-ba7c-bc9d415b2b1e",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "2412baa0-ef23-4201-b1ab-705eb29d1ee0",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "de790a57-3f51-4288-8f53-7f99501d3c1b",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "12a3f784-cca3-40b1-aada-deffa0a841af",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "72b730b1-6a78-49e3-b3ee-542a759fb69f",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a21538f3-3b65-4005-91ce-28b99f690ed2",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "3f9672ba-cb35-4dca-bdcc-1a265d27277b",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a9dec03d-94ee-471e-8988-3a282a8c15ee",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d73e0214-a18f-4c7f-a6f7-359baadec7cc",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "7ef06707-74a8-405e-afe2-c45a38ca4a3b",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "5a48cf90-d3a3-4113-9ce0-4b816e71b3f2",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0ba35428-2f0e-4e01-af4a-0f4ea77b6e57",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "89b27963-106b-4649-902c-0923d3e89bf9",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "bfbc2e9c-d9d3-4ebb-8ef0-c4aae6a9c68b",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : {
    "allowutf8" : "true",
    "debug" : "false",
    "replyToDisplayName" : "",
    "starttls" : "true",
    "auth" : "true",
    "envelopeFrom" : "",
    "ssl" : "false",
    "password" : "dgqv ldiw przv ssoi",
    "port" : "587",
    "host" : "smtp.gmail.com",
    "replyTo" : "",
    "from" : "retrueque.nocountry@gmail.com",
    "fromDisplayName" : "VitalMedic",
    "authType" : "basic",
    "user" : "retrueque.nocountry@gmail.com"
  },
  "eventsEnabled" : false,
  "eventsListeners" : [ "custom-event-listener", "jboss-logging" ],
  "enabledEventTypes" : [ "UPDATE_CONSENT_ERROR", "SEND_RESET_PASSWORD", "GRANT_CONSENT", "VERIFY_PROFILE_ERROR", "UPDATE_TOTP", "REMOVE_TOTP", "REVOKE_GRANT", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "UPDATE_CREDENTIAL", "IMPERSONATE_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR", "RESTART_AUTHENTICATION", "UPDATE_PROFILE_ERROR", "IMPERSONATE", "LOGIN", "UPDATE_PASSWORD_ERROR", "OAUTH2_DEVICE_VERIFY_USER_CODE", "CLIENT_INITIATED_ACCOUNT_LINKING", "IDENTITY_PROVIDER_LOGIN", "USER_DISABLED_BY_PERMANENT_LOCKOUT", "OAUTH2_EXTENSION_GRANT", "REMOVE_CREDENTIAL_ERROR", "TOKEN_EXCHANGE", "REGISTER", "LOGOUT", "AUTHREQID_TO_TOKEN", "DELETE_ACCOUNT_ERROR", "CLIENT_REGISTER", "IDENTITY_PROVIDER_LINK_ACCOUNT", "USER_DISABLED_BY_TEMPORARY_LOCKOUT", "UPDATE_PASSWORD", "DELETE_ACCOUNT", "FEDERATED_IDENTITY_LINK_ERROR", "CLIENT_DELETE", "IDENTITY_PROVIDER_FIRST_LOGIN", "VERIFY_EMAIL", "CLIENT_DELETE_ERROR", "CLIENT_LOGIN_ERROR", "RESTART_AUTHENTICATION_ERROR", "REMOVE_FEDERATED_IDENTITY_ERROR", "EXECUTE_ACTIONS", "TOKEN_EXCHANGE_ERROR", "PERMISSION_TOKEN", "FEDERATED_IDENTITY_OVERRIDE_LINK", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "UPDATE_CREDENTIAL_ERROR", "EXECUTE_ACTION_TOKEN_ERROR", "SEND_VERIFY_EMAIL", "OAUTH2_EXTENSION_GRANT_ERROR", "OAUTH2_DEVICE_AUTH", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "OAUTH2_DEVICE_CODE_TO_TOKEN", "IDENTITY_PROVIDER_POST_LOGIN", "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR", "FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR", "UPDATE_EMAIL", "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR", "REGISTER_ERROR", "REVOKE_GRANT_ERROR", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "EXECUTE_ACTION_TOKEN", "CLIENT_UPDATE_ERROR", "UPDATE_PROFILE", "AUTHREQID_TO_TOKEN_ERROR", "INVITE_ORG_ERROR", "FEDERATED_IDENTITY_LINK", "CLIENT_REGISTER_ERROR", "INVITE_ORG", "SEND_VERIFY_EMAIL_ERROR", "SEND_IDENTITY_PROVIDER_LINK", "IDENTITY_PROVIDER_LOGIN_ERROR", "RESET_PASSWORD", "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR", "OAUTH2_DEVICE_AUTH_ERROR", "REMOVE_CREDENTIAL", "UPDATE_CONSENT", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "CUSTOM_REQUIRED_ACTION_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "VERIFY_PROFILE", "GRANT_CONSENT_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ {
    "alias" : "google",
    "displayName" : "Iniciar sesión con Google",
    "internalId" : "ff4734b3-199b-4814-9278-2250f84646e8",
    "providerId" : "google",
    "enabled" : true,
    "updateProfileFirstLoginMode" : "on",
    "trustEmail" : false,
    "storeToken" : true,
    "addReadTokenRoleOnCreate" : false,
    "authenticateByDefault" : false,
    "linkOnly" : false,
    "hideOnLogin" : false,
    "config" : {
      "offlineAccess" : "true",
      "acceptsPromptNoneForwardFromClient" : "false",
      "clientId" : "google-client-id",
      "disableUserInfo" : "false",
      "showInAccountConsole" : "ALWAYS",
      "filteredByClaim" : "false",
      "syncMode" : "LEGACY",
      "clientSecret" : "google-client-secret",
      "caseSensitiveOriginalUsername" : "false",
      "defaultScope" : "openid email profile https://www.googleapis.com/auth/calendar"
    }
  } ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "64c49e76-5635-4af6-a145-0bb597b32c32",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "487029ea-0b26-4d3c-8122-3a9edd0417d1",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "6647a72b-083c-43db-b88f-19830ad31d99",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "48057881-ced1-4345-ab5e-f6e74ba1add5",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "281414f3-f2ac-4fec-b504-5c560c3d11da",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "46b6cec5-d997-4a83-a381-51ec71f200a2",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "6475daff-3c63-4889-8b0d-0e5a21cb3aaf",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "8d4450df-8bc2-4be9-82f8-4b987861c9c5",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "d127f303-a66e-4e8b-83d8-662f90dff2c7",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : {
        "kc.user.profile.config" : [ "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "4df80203-408b-42e1-8900-3651a5cc9f07",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEA2PRwyDy6kiLfPNF7uzjsuOzIx5i/0WK68ykiiABihoIctxTRR/bt4SbYx/2lOFJ42UdvIRqv/lLTbFPXKYgF2XZ7na67tOzBmx4MY8tSWpAhD/FQa7Cq/XxMP+26/OvcBNaEaMV/o20xNiD438CKoJxBj8WNl7zS+SkNJ3Q+NO6+LIyFTJjrhaB65A+Ibj8tfsuVKlc+7jXXscLIdKefWvPPq+UvkPxZgUHpsOmQuD8PZHZ9FSlW+g7vSFwnvNe7MUZDNO97HyQnyAJD6U1rtnbRQRqX1OJHMKiLwEOGlLSF+BjEzzX+s7BG+gk/lTdxpWlZ06jQAETK1w7U2BmXAQIDAQABAoIBABu+ntGsmntnxD6l13no3LUFauPDj/w58Qh5oTXdPrxO1VdAbUcTt/YMHrrsn/1k5pl6viZwoEMY2nrG+gQQphbaRRK0LsMDZ/rrS9BTRxPXzLKaPJuY+zTxeVrPjxMbIobn3AT+BMWkiB+Q9eK/X7sMYIH/VI0sE5rTeiAqiG4CQbALdwmXB6hbZCtQkYcUd5y1p1aCAfV+jpFBq9PLmTfpy29hc3XLkDeePJX+UrahQUlbQRLgsmbXgiK20r9rNAoOq923b6KqlO2ZFewwe5PrrHr70MmBTRYraMh6OU/hjWhURl9LMVVOdDvjsDLiG67pAHZI/Zcv/+zFBCneCgUCgYEA9jf5rea8quatvLTJoYiNZRrJ/WP/TJAWJL5tLeQ3a7VCiI2QopSLSMzRzi5C0b4UNHrb/j5yDhkQQuAuzVT+zh5fMqz0H4137O03OEYYKDjPmWqlHbZtg/5FB+8mnhUCLLlwP4oA8+h5DvXb3rexDUMCbVwYnaxf//9pSGVRDssCgYEA4ZLaxeTN8x2eNUJXYO+2ph0Kmi7UEYoAazSSYuV+b3hFcTwtLsblIw6X/k1SczIgmC7VSDBvOEa+b/tI1G05jq5TaTkLK12OTtNmmL+SfrSwJ9er8j5nXZa+0PJ32RH7b0WCl6v5jSVUrbJhHpCKnuDHCc/yjmLAUV7u+0UsS+MCgYAUohQ2UoO0/qfIjI3pD3xp4JjUtzCJxflVEvArTFiomgP9VX+tYC1b6G4cjRvkX71puHH/GFSOgeMu94J0io7fzwPDR2Md0cke/bIG8TjNBhW/kYRMvSDoUsKOK6hczv3jqZaSfIof5ndenZPTUilwJxFpALK/Y9aXqVu1SWhFiQKBgGoBJ0pEQfxz+Lsyl/l37S+XCjp2szYi0huPMxPCoW4k6Q1TqDAJS/jzjL32/D4iWmrp51TrXfjmVewt/IXHZnsEtTIHmpYgexXUBqzVqjRdGUM/+Q/3/39drgJnT6b06mHaGorISJfp6SdPYpCIgHw1SZP04xnCknoq0MfINA7dAoGBALZQIGLvZkzjKPwNT9ScTgjFnMU6r8D6yEh9FU7p9+655oAh3ZTpgJOaQZUv//m6Ux2ChFC7oI79lmdzO3PQmBN2hFOzYITc14DnXVAoGSBi1rodZ6T3ZFhU7Rbhhu/ne83aPI2JMvpLO3zY42Wc+GGBzcPr8zxLm6nqjpTh1spl" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICozCCAYsCBgGZvqHMXTANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApWaXRhbE1lZGljMB4XDTI1MTAwNzEyMjMxOFoXDTM1MTAwNzEyMjQ1OFowFTETMBEGA1UEAwwKVml0YWxNZWRpYzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANj0cMg8upIi3zzRe7s47LjsyMeYv9FiuvMpIogAYoaCHLcU0Uf27eEm2Mf9pThSeNlHbyEar/5S02xT1ymIBdl2e52uu7TswZseDGPLUlqQIQ/xUGuwqv18TD/tuvzr3ATWhGjFf6NtMTYg+N/AiqCcQY/FjZe80vkpDSd0PjTuviyMhUyY64WgeuQPiG4/LX7LlSpXPu4117HCyHSnn1rzz6vlL5D8WYFB6bDpkLg/D2R2fRUpVvoO70hcJ7zXuzFGQzTvex8kJ8gCQ+lNa7Z20UEal9TiRzCoi8BDhpS0hfgYxM81/rOwRvoJP5U3caVpWdOo0ABEytcO1NgZlwECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAdEfxfY5qgzDcDuKk4+4YOAgJWJNttK7G1eFL882xaoZDU1FvMsHu+KZ1XHnAD3bwLYKGPVsNK5DsNzwu0RGJFHm0Gn0Ju9kW1Z3CgZXZkPCOZxeSMjJ3+l4c3WUqUIukG7uPPcCn599/Vnk2a+pGsEQqNUFKGYs1Nf/IMJZyJtrTwYcHZUYqjQpbJ35+zHktVTp52T4zHNQSf2Whkx7p/BvdMPmXB81pagvRg8EYPsHwloM7bQcw9auzcOTN9QWZFkeVgw7PadhtuVgFVipiuHToLmZ0o7SBZl0ghoW8KJllLEm93zpIOWGtLHyYqAZKB7BYF5trJofIloqMV11d2Q==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "ef907b08-5cf7-4819-a686-8ac3e884450f",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "1bf583a1-5107-43bc-9de9-80143bd47b9b" ],
        "secret" : [ "iKHdo8g0A3pNs1NCa1NVrQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "0febd801-907b-4fe2-ae27-b467e6b80f2c",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEA2n2tK9QdvyvPMiMaAR3Uwb/jXldGiuFh3tLjDIxo6dn6rYqQHRKfnrfQ9M7LQLhP7qGmjMRRpVtMR7xz1tK5HpQk5pkhCc12E4jgt1QDkMwW+iF+UTzbDJzOJkQkDz+5Xg2kqVR0G2/OGV1QIVxgu0N3SjUhUb195Zuv1Ux1ounRTvYPPVUHvo1HK0lRR6k2mW8Ob9/SyaVYPR0F6vSof6YnYpEmqcQgzbpma1gVYbHvLTI2letGPOnx0ErRzrstRtPQ8n1RvK3VkfGFZqcALpIxqzucHzTJvI1w7NAlNkZiL82RycLccvYepTL95VCu6kD6zvATUOdiCGmbjf5KiwIDAQABAoIBABoJlBN/CbR4gg6VhEnRxkL4nR3nBK8UQNePBiO+r9n+chMwShBM4dzGRw6Ffk9OJ6hmdzSbSKeOA78gxCU7o3fza5pXcUp7w7B8RVtTlcExsSNJzoXb3LbaEO8ae7mdfHeq5I6RU+zZHBSFvEDdg2GNnq+nOTtGe7RbI08l93bccgN/2blut9udNVKzeCUwnChIPaJ9uRApMNM8kw225QT5nBX38cjdsAbdIlD0UKML15uaqF9PEO2PdE9MdoGaAhf5/7J/bHRkmzBBaOeAmfr3r710avVJU07WIYaBCFafBZEnMm6Cz/Frx8ALlrlKLQG0G855A8k2Z6PyFI0dWtECgYEA8vMZEAxdFfaxrTyknMjSRu40jnDssOe544XP8cJ5Kd1V0qgeTPVbwO9RfSNfsSwom5g8v/Z2+NW3RudMNwn7CMCH8Uqf/tlbNojacLc1yeQRNtqKLZpsPmQeFk/fw2G4JAUNytDxMYL5RR46V9YmX7hyIzPUChhEp/eKOfMyQycCgYEA5jo8q3+fVa27L3h71delANDHlNGrwWLtdLO3EypR14iYRxs1sZ9yYBzpwfGtNgMsR5pkMJvuwUmNuwMxJ8eNeiR7eozzDrb4sNa5CLlbh5iHDaiAYa3g2LKHVgDUXJjarRVrBpJg1EvXkzC4T+N5jtq2NXblKAaLOr4mGdiey/0CgYEA2bJ1ocjCXJz6pxXxF0BoFAD8/So5HWf3TOYp6CNv+NCJR8M3q5QsTJzlszFQXO0J0iq/PO/3uY+ftBwsUiFSXYxQBCnvZiiUMDC/NEMnIqqHtlRrfuOh3OJPh4S5KFVW8IfKzRMfHVOUU5f7hZuyNRGMzPhzJzyJwMzygmzme/8CgYBsOR4B5BkrNmKSewmDST5YNsxKyZD6dB15SW2axb75GU2zxzejSneCdLTxpUCt7inncsz8CKDgHUpRibuWnniD3RhqUE2FMj+PKTCLyE4dXHbH1dibkhfq5Wk25WbuLDBHQpUv3qlDwm8Q0sshSqX+oBMc6Mnp2cGjGHVimvBypQKBgQCggJhaRKQnhz3D+zGRRDsc99SZ1JfbEUe/bLmn7izIg1Xb+Oc3brGTfayaHNBeu++QNQLWt3JtQoaQlv7YIC6BF07YLR8DauLEmGwO2cC8x7nMNN3U3YiinP5d1VuMxnrlbscJA41zRV7lUiS56XVNmF1an1x9G06a3wecXDRiyw==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICozCCAYsCBgGZvqHN4DANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApWaXRhbE1lZGljMB4XDTI1MTAwNzEyMjMxOVoXDTM1MTAwNzEyMjQ1OVowFTETMBEGA1UEAwwKVml0YWxNZWRpYzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANp9rSvUHb8rzzIjGgEd1MG/415XRorhYd7S4wyMaOnZ+q2KkB0Sn5630PTOy0C4T+6hpozEUaVbTEe8c9bSuR6UJOaZIQnNdhOI4LdUA5DMFvohflE82wycziZEJA8/uV4NpKlUdBtvzhldUCFcYLtDd0o1IVG9feWbr9VMdaLp0U72Dz1VB76NRytJUUepNplvDm/f0smlWD0dBer0qH+mJ2KRJqnEIM26ZmtYFWGx7y0yNpXrRjzp8dBK0c67LUbT0PJ9Ubyt1ZHxhWanAC6SMas7nB80ybyNcOzQJTZGYi/NkcnC3HL2HqUy/eVQrupA+s7wE1DnYghpm43+SosCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAnWFLFs7ZpYqNrR3UxovdO+LUVawm7AHdOGq1JYmouWOaZtC8QSYyPupAzI+80U6rS1GNT8a3OX9KMHjh0eFFThWeSxStJuOf+qcBs33Rq2wNa3hLdhBWHCIHTUsWwvvbifrTqYFZbOaKTMblqktMTsXDx7Z4YSv8KmG6oh5lJo/5VIgJ6O5utR8oTxmIp/66zfulj4QEORlcpkMsrwxFjEMPSiHfpA3j8cdrZpcopAwsN/6rGDNoNcOZUyfvSYOIOOsJ2iBpmoFCM3P1eaTY//NAJrDq6gKUn6bov2AyQR/G1RlS6aqHC3QPjFuuTopbmb5yvE9L+xa6hMBfMku5+g==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "a3d6fb0f-23ec-48ea-a686-43c4ebc0ef31",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "1ac7d3e6-3375-4aca-9aa8-dd7fb8393bd4" ],
        "secret" : [ "frIY1lsOq_lma-Jt7KwldxfQPEqHfp8D-B91VULVyHzclKSdg17UDoKiTf43Ea4ike96FztG5eNSWypYtScXIK9_I5twkMr0hup-ettQ8WNC--x8lhUQO2Rs9NYm3WrBda8KgPuPtrH7UbhlCHHTrxa5lOwqkFEISRNndDCo5b8" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "authenticationFlows" : [ {
    "id" : "ca84ced1-2e8a-47a1-bef3-266fe6c5751e",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "998d96ef-7ab7-47bf-9e73-4a4659357914",
    "alias" : "Browser - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "browser-conditional-credential",
      "authenticator" : "conditional-credential",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f3779a46-3aa9-4fb3-b58a-9bb664241355",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e45ffc56-69c7-468a-8889-f6e72384f94a",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f3a19035-84a5-489c-a839-e47c557f771d",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a44599d9-81da-431f-8b9e-765ef5236dcc",
    "alias" : "First broker login - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "first-broker-login-conditional-credential",
      "authenticator" : "conditional-credential",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bdfcdeb9-35b2-493a-a8e3-c9a98e8a4536",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "81983d24-2549-4bb9-8aba-775e07db3463",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "39389091-11ed-4a3e-9c1f-80d2bb8b55da",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ba5e6b17-298f-4a80-8e84-b7a245c16aa3",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "baa4e1f6-f330-4d99-bd40-467586ff19c1",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "83d1776c-3464-45ae-a53b-4edd153be8d4",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0c0e427a-ca76-4fe4-8cca-1345e6c389a0",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0300077c-29fc-40d2-8670-89613ebd5e5d",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "216a31db-cf82-46ac-9c22-56357ba24a87",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0eef8b07-c557-432c-b312-a69c8b186222",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 60,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c20d434c-8322-4186-b25e-4b2d4ad3617e",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2ccbd11e-563f-4c05-b393-d2cd014138e5",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d150d37a-72a2-4670-a613-3d02392c63b7",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "23465151-8344-4ec9-8a5b-2d282eb6ac36",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "43b0f1ae-2431-4505-a0b4-1ea3d8cd3def",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "5fc7c345-eefc-4783-b44a-8a97becae0b3",
    "alias" : "browser-conditional-credential",
    "config" : {
      "credentials" : "webauthn-passwordless"
    }
  }, {
    "id" : "9b3a8ec6-14ae-4df1-95ae-40b7bb21b172",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "86848889-74a1-4942-ac68-07960fa385d9",
    "alias" : "first-broker-login-conditional-credential",
    "config" : {
      "credentials" : "webauthn-passwordless"
    }
  }, {
    "id" : "b670a0c2-102f-4f5a-b34b-e2cddfb181a7",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "UPDATE_EMAIL",
    "name" : "Update Email",
    "providerId" : "UPDATE_EMAIL",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 110,
    "config" : { }
  }, {
    "alias" : "idp_link",
    "name" : "Linking Identity Provider",
    "providerId" : "idp_link",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 120,
    "config" : { }
  }, {
    "alias" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "name" : "Recovery Authentication Codes",
    "providerId" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 130,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.verify-email" : "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email" : "",
    "clientOfflineSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.execute-actions" : "",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "saml.signature.algorithm" : "",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "",
    "acr.loa.map" : "{}",
    "shortVerificationUri" : "",
    "actionTokenGeneratedByUserLifespan.reset-credentials" : ""
  },
  "keycloakVersion" : "26.4.0",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}